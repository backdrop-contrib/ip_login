<?php
/**
 * @file
 * Install file of the IP Login module.
 */

/**
 * Implementation of hook_install().
 */
function ip_login_install() {
  if (!backdrop_is_cli()) {
    $t = get_t();
    backdrop_set_message($t("IP Login installed successfully. !link IP settings.", array(
      '!link' => l($t('Configure'), 'admin/config/people/ip_login'),
    )));
  }
  config_set('ip_login.settings', 'ip_login_enabled', 1);
}

/**
 * Implementation of hook_schema().
 */
function ip_login_schema() {
  $schema['ip_login_user'] = array(
    'description' => t('Stores the IP Login address and range matches for users'),
    'fields' => array(
      'uid' => array(
        'description' => t('ID of user for IP Login'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'ip_match' => array(
        'description' => t('IPv4 ranges and addresses'),
        'type' => 'text',
        'size' => 'medium',
      ),
      'ip6_match' => array(
        'description' => t('IPv6 ranges and addresses'),
        'type' => 'text',
        'size' => 'medium',
      ),
    ),
    'primary key' => array('uid'),
  );
  return $schema;
}

/*
 * Implementation of hook_uninstall().
 */
function ip_login_uninstall() {
  backdrop_uninstall_schema('ip_login');
}

/**
 * @defgroup updates-7.x-to-1.x Updates from 7.x to 1.x
 * @{
 * Update functions from Backdrop 7.x to Backdrop CMS 1.x.
 */

/**
 * Move IP Login settings from variables to config.
 */
function ip_login_update_1000() {
  // Migrate variables to config.
  $config = config('ip_login.settings');
  $config->set('', update_config_get('ip_login.settings', '', 0));
  $config->set('', update_variable_get('ip_login_active_pages', ''));
  $config->set('', update_variable_get('ip_login_enabled', 1));
  $config->set('', update_variable_get('ip_login_destination', 'user'));
  $config->set('', update_variable_get('ip_login_link_login_block', 'Log in automatically'));
  $config->set('', update_variable_get('ip_login_link_login_block_weight', -10));
  $config->set('', update_variable_get('ip_login_link_login_page', 'Log in automatically'));
  $config->set('', update_variable_get('ip_login_link_login_page_help', "Your computer's IP address has been matched and validated."));
  $config->set('', update_variable_get('ip_login_link_login_page_weight', -10));
  $config->set('', update_variable_get('ip_login_suppress_messages', 0));
  $config->save();

  // Delete variables.
  update_variable_del('ip_login_active_pages');
  update_variable_del('ip_login_enabled');
  update_variable_del('ip_login_destination');
  update_variable_del('ip_login_link_login_block');
  update_variable_del('ip_login_link_login_block_weight');
  update_variable_del('ip_login_link_login_page');
  update_variable_del('ip_login_link_login_page_help');
  update_variable_del('ip_login_link_login_page_weight');
  update_variable_del('ip_login_suppress_messages');
}

/**
 * Change the data type of 'ip_match' field.
 */
function ip_login_update_1001() {
  db_field_set_no_default('ip_login_user', 'ip_match');

  db_change_field('ip_login_user', 'ip_match', 'ip_match', array(
    'type' => 'text',
    'size' => 'medium',
  ));

  // Clear caches.
  field_cache_clear();
}

/**
 * Add a new field to 'ip_login_user' table.
 */
function ip_login_update_1002() {
  db_add_field('ip_login_user', 'ip6_match', array(
    'description' => t('IPv6 ranges and addresses'),
    'type' => 'text',
    'size' => 'medium',
  ));
}